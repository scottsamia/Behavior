@model Behavior.Models.CounterViewModels.CounterViewModel

@{
    ViewData["Title"] = "Counter";
}

<form asp-action="View">


    <div class="row">
        <div class="col-xs-12">
            <h2 class="studentFullNameLbl text-center"></h2>
        </div>
    </div>
    <div class="row top-buffer">

        <div class="col-xs-12 text-center">
            <h3>Count: <kbd class="counterLbl counterLbl-lg"></kbd></h3>
        </div>
    </div>
    <div class="row top-buffer">

        <div class="col-xs-12">
            <button type="button" id="countUp" class="btn btn-danger btn-lg btn-block counterBtn glyphicon glyphicon-plus"></button>
        </div>
    </div>
    <div class="row top-buffer">
        <div class="col-xs-12">
            <button type="button" id="countDown" class="btn btn-default btn-lg btn-block counterBtn glyphicon glyphicon-minus"></button>
        </div>
    </div>
    <div class="row top-buffer">
        <div class="col-xs-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="submit" value="Save" class="btn btn-default btn-lg btn-block" />
        </div>
    </div>

</form>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var fireBaseRef = behavior.firebase;
        
        fireBaseRef.init();

        var database = fireBaseRef.database;
        var currCounter = behavior.counter;
        var student = behavior.student;
        currCounter.init();
        student.init(database, "Samia");

    </script>
}
